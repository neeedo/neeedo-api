# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET            /                            @controllers.StaticController.status()
GET            /status                      @controllers.StaticController.status()
GET            /doc                         @controllers.StaticController.showDocumentation()

# Demands
GET            /demands/:id                 @controllers.DemandsController.getDemandById(id: model.DemandId)
GET            /demands/users/:id           @controllers.DemandsController.getDemandsByUserId(id: common.domain.UserId, pager: Option[common.domain.Pager])
GET            /demands                     @controllers.DemandsController.getAllDemands(pager: Option[common.domain.Pager], loc: Option[common.domain.Location])
POST           /demands                     @controllers.DemandsController.createDemand()
PUT            /demands/:id/:version        @controllers.DemandsController.updateDemand(id: model.DemandId, version: common.domain.Version)
DELETE         /demands/:id/:version        @controllers.DemandsController.deleteDemand(id: model.DemandId, version: common.domain.Version)
# DELETE         /demands/all                  @controllers.DemandsController.deleteAllDemands()
OPTIONS        /demands                     @controllers.StaticController.deliverCorsHeaders()

# Offers
GET            /offers/:id                  @controllers.OffersController.getOfferById(id: model.OfferId)
GET            /offers/users/:id            @controllers.OffersController.getOffersByUserId(id: common.domain.UserId, pager: Option[common.domain.Pager])
GET            /offers                      @controllers.OffersController.getAllOffers(pager: Option[common.domain.Pager], loc: Option[common.domain.Location])
POST           /offers                      @controllers.OffersController.createOffer()
# POST           /testOffers                  @controllers.OffersController.createTestOffer()
PUT            /offers/:id/:version         @controllers.OffersController.updateOffer(id: model.OfferId, version: common.domain.Version)
DELETE         /offers/:id/:version         @controllers.OffersController.deleteOffer(id: model.OfferId, version: common.domain.Version)
# DELETE         /offers/all                  @controllers.OffersController.deleteAllOffers()
OPTIONS        /offers                      @controllers.StaticController.deliverCorsHeaders()

# Matching
POST           /matching/demand             @controllers.MatchingController.matchDemand(pager: Option[common.domain.Pager])
OPTIONS        /matching/demand             @controllers.StaticController.deliverCorsHeaders()

# Completion
GET            /completion/tag/:tag         @controllers.CompletionController.completeTag(tag: String)
GET            /completion/suggest/:phrase  @controllers.CompletionController.suggestTags(phrase: String)

# Users
GET            /users/:id                   @controllers.UsersController.getUserById(id: common.domain.UserId)
GET            /users/mail/:mail            @controllers.UsersController.getUserByMail(mail: common.domain.Email)
POST           /users                       @controllers.UsersController.createUser()
# PUT            /users/:id/:version          @controllers.UsersController.updateUser(id: common.domain.UserId, version: common.domain.Version)
DELETE         /users/:id/:version          @controllers.UsersController.deleteUser(id: common.domain.UserId, version: common.domain.Version)

# Images
GET            /images/:id                  @controllers.ImagesController.getImageById(id: common.domain.ImageId)
POST           /images                      @controllers.ImagesController.createImage()
POST           /images/:url                 @controllers.ImagesController.createImageFromUrl(url: String)
# DELETE         /images/:id                  @controllers.ImagesController.deleteImage(id: common.domain.ImageId)

# Conversations
GET /conversations/:userId                  @controllers.MessagesController.getConversationsByUser(userId: common.domain.UserId, read: Option[Boolean])

# Messages
GET             /messages/:u1/:u2           @controllers.MessagesController.getMessagesByUsers(u1: common.domain.UserId, u2: common.domain.UserId)
POST            /messages                   @controllers.MessagesController.createMessage()
PUT             /messages/:id               @controllers.MessagesController.markMessageRead(id: model.MessageId)

# Favorites
GET             /favorites/:uid             @controllers.FavoritesController.getFavoritesByUser(uid: common.domain.UserId)
POST            /favorites                  @controllers.FavoritesController.addFavorite()
DELETE          /favorites                  @controllers.FavoritesController.removeFavorite()

# Map static resources from the /public folder to the /assets URL path
GET            /assets/*file                controllers.Assets.at(path="/public", file)
