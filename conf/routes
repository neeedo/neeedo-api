# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET            /                            @controllers.Documentation.showDocumentation()
GET            /status                      @controllers.Static.status()

# Demands
GET            /demands/:id                 @controllers.Demands.getDemand(id: model.DemandId)
POST           /demands                     @controllers.Demands.createDemand()
PUT            /demands/:id/:version        @controllers.Demands.updateDemand(id: model.DemandId, version: common.domain.Version)
DELETE         /demands/:id/:version        @controllers.Demands.deleteDemand(id: model.DemandId, version: common.domain.Version)
OPTIONS        /demands                     @controllers.Static.deliverCorsHeaders()

# Offers
GET            /offers/:id                  @controllers.Offers.getOffer(id: model.OfferId)
POST           /offers                      @controllers.Offers.createOffer()
PUT            /offers/:id/:version         @controllers.Offers.updateOffer(id: model.OfferId, version: common.domain.Version)
DELETE         /offers/:id/:version         @controllers.Offers.deleteOffer(id: model.OfferId, version: common.domain.Version)
OPTIONS        /offers                      @controllers.Static.deliverCorsHeaders()

# Matching
GET            /matching/demands            @controllers.Matching.matchDemands()
POST           /matching/demand/:from/:size @controllers.Matching.matchDemand(from: common.domain.From, size: common.domain.PageSize)
OPTIONS        /matching/demand             @controllers.Static.deliverCorsHeaders()
OPTIONS        /matching/demand/0/0         @controllers.Static.deliverCorsHeaders()

# Users
GET            /users/:username             @controllers.Users.getUserByName(username: common.domain.Username)
# GET            /users/:id                   @controllers.Users.getUserById(id: common.domain.UserId)
POST           /users                       @controllers.Users.createUser()
PUT            /users/:id/:version          @controllers.Users.updateUser(id: common.domain.UserId, version: common.domain.Version)
DELETE         /users/:id/:version          @controllers.Users.deleteUser(id: common.domain.UserId, version: common.domain.Version)

# Stub Demands
# GET            /stub/demands                @controllers.DemandsStub.listDemands()
# GET            /stub/demands/:id            @controllers.DemandsStub.getDemand(id: model.DemandId)
# POST           /stub/demands                @controllers.DemandsStub.createDemand()
# PUT            /stub/demands/:id/:version   @controllers.DemandsStub.updateDemand(id: model.DemandId, version: common.domain.Version)
# DELETE         /stub/demands/:id/:version   @controllers.DemandsStub.deleteDemand(id: model.DemandId, version: common.domain.Version)
# OPTIONS        /stub/demands                @controllers.Documentation.showDocumentation()

# Stub Offers
# GET             /stub/offers                @controllers.OffersStub.listOffers()
# GET             /stub/offers/:id            @controllers.OffersStub.getOffer(id: model.OfferId)
# POST            /stub/offers                @controllers.OffersStub.createOffer()
# PUT             /stub/offers/:id/:version   @controllers.OffersStub.updateOffer(id: model.OfferId, version: common.domain.Version)
# DELETE          /stub/offers/:id/:version   @controllers.OffersStub.deleteOffer(id: model.OfferId, version: common.domain.Version)
# OPTIONS         /stub/offers                @controllers.Documentation.showDocumentation()


# Map static resources from the /public folder to the /assets URL path
GET            /assets/*file                controllers.Assets.at(path="/public", file)
