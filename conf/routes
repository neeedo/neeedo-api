# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET            /                            @controllers.StaticController.status()
GET            /status                      @controllers.StaticController.status()
GET            /doc                         @controllers.StaticController.showDocumentation()

# Demands
GET            /demands/:id                 @controllers.DemandsController.getDemandById(id: model.DemandId)
GET            /demands/users/:id           @controllers.DemandsController.getDemandsByUserId(id: common.domain.UserId)
POST           /demands                     @controllers.DemandsController.createDemand()
PUT            /demands/:id/:version        @controllers.DemandsController.updateDemand(id: model.DemandId, version: common.domain.Version)
DELETE         /demands/:id/:version        @controllers.DemandsController.deleteDemand(id: model.DemandId, version: common.domain.Version)
#DELETE         /demands/all                  @controllers.DemandsController.deleteAllDemands()
OPTIONS        /demands                     @controllers.StaticController.deliverCorsHeaders()

# Offers
GET            /offers/:id                  @controllers.OffersController.getOfferById(id: model.OfferId)
GET            /offers/users/:id            @controllers.OffersController.getOffersByUserId(id: common.domain.UserId)
POST           /offers                      @controllers.OffersController.createOffer()
PUT            /offers/:id/:version         @controllers.OffersController.updateOffer(id: model.OfferId, version: common.domain.Version)
DELETE         /offers/:id/:version         @controllers.OffersController.deleteOffer(id: model.OfferId, version: common.domain.Version)
#DELETE         /offers/all                  @controllers.OffersController.deleteAllOffers()
OPTIONS        /offers                      @controllers.StaticController.deliverCorsHeaders()

# Matching
GET            /matching/demands            @controllers.MatchingController.matchDemands()
POST           /matching/demand/:from/:size @controllers.MatchingController.matchDemand(from: common.domain.From, size: common.domain.PageSize)
OPTIONS        /matching/demand             @controllers.StaticController.deliverCorsHeaders()
OPTIONS        /matching/demand/0/0         @controllers.StaticController.deliverCorsHeaders()

# Completion
GET            /completion/tag/:tag             @controllers.CompletionController.completeTag(tag: String)
GET            /completion/:type/phrase/:phrase @controllers.CompletionController.suggestTags(type: String, phrase: String)

# Users
GET            /users/mail/:mail            @controllers.UsersController.getUserByMail(mail: common.domain.Email)
POST           /users                       @controllers.UsersController.createUser()
PUT            /users/:id/:version          @controllers.UsersController.updateUser(id: common.domain.UserId, version: common.domain.Version)
DELETE         /users/:id/:version          @controllers.UsersController.deleteUser(id: common.domain.UserId, version: common.domain.Version)

#
GET            /images/:id                  @controllers.ImagesController.getImage(id: String)
POST           /images                      @controllers.ImagesController.upload()

# Map static resources from the /public folder to the /assets URL path
GET            /assets/*file                controllers.Assets.at(path="/public", file)
